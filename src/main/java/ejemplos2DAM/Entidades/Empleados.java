package ejemplos2DAM.Entidades;
// Generated 30-ene-2019 14:03:23 by Hibernate Tools 5.2.11.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.json.bind.annotation.JsonbTransient;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;

import org.hibernate.HibernateException;
import org.hibernate.Session;

import ejemplos2DAM.EjemploRestHibernate.EmpleadosRest;
import ejemplos2DAM.Entidades.*;
/**
 * Empleados generated by hbm2java
 */
@XmlRootElement(name="Empleado")
@Entity
@Table(name = "empleados", catalog = "ejemplohibernate")
public class Empleados implements java.io.Serializable {

	private short empNo;
	private Departamentos departamentos;
	private Empleados empleados;
	private String apellido;
	private String oficio;
	private Date fechaAlt;
	private Float salario;
	private Float comision;
	private short jefe;
	private byte depNum;
	private Set<Empleados> empleadoses = new HashSet<Empleados>(0);

	public Empleados() {
	}

	public Empleados(short empNo, Departamentos departamentos) {
		this.empNo = empNo;
		this.departamentos = departamentos;
	}

	public Empleados(short empNo, Departamentos departamentos, Empleados empleados, String apellido, String oficio,
			Date fechaAlt, Float salario, Float comision, Set<Empleados> empleadoses) {
		this.empNo = empNo;
		this.departamentos = departamentos;
		this.empleados = empleados;
		this.apellido = apellido;
		this.oficio = oficio;
		this.fechaAlt = fechaAlt;
		this.salario = salario;
		this.comision = comision;
		this.empleadoses = empleadoses;
	}

	@Id
	@Column(name = "emp_no", unique = true, nullable = false)
	public short getEmpNo() {
		return this.empNo;
	}

	public void setEmpNo(short empNo) {
		this.empNo = empNo;
	}

	@XmlTransient
	@JsonbTransient
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "dept_no", nullable = false)
	public Departamentos getDepartamentos() {
		return this.departamentos;
	}

	public void setDepartamentos(Departamentos departamentos) {
		this.departamentos = departamentos;
	}

	@XmlTransient
	@JsonbTransient
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "dir")
	public Empleados getEmpleados() {
		return this.empleados;
	}

	public void setEmpleados(Empleados empleados) {
		this.empleados = empleados;
	}

	@Column(name = "apellido", length = 10)
	public String getApellido() {
		return this.apellido;
	}

	public void setApellido(String apellido) {
		this.apellido = apellido;
	}

	@Column(name = "oficio", length = 10)
	public String getOficio() {
		return this.oficio;
	}

	public void setOficio(String oficio) {
		this.oficio = oficio;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "fecha_alt", length = 10)
	public Date getFechaAlt() {
		return this.fechaAlt;
	}

	public void setFechaAlt(Date fechaAlt) {
		this.fechaAlt = fechaAlt;
	}

	@Column(name = "salario", precision = 6)
	public Float getSalario() {
		return this.salario;
	}

	public void setSalario(Float salario) {
		this.salario = salario;
	}

	@Column(name = "comision", precision = 6)
	public Float getComision() {
		return this.comision;
	}

	public void setComision(Float comision) {
		this.comision = comision;
	}

	@XmlTransient
	@JsonbTransient
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "empleados")
	public Set<Empleados> getEmpleadoses() {
		return this.empleadoses;
	}

	public void setEmpleadoses(Set<Empleados> empleadoses) {
		this.empleadoses = empleadoses;
	}

	@Transient
	public short getJefe() {
	
		jefe = 0;
		if (empleados != null)
		{
			jefe = empleados.getEmpNo();
		}
		return jefe;
	}

	public void setJefe(short jefe) {
    	Session session = EmpleadosRest.getSesFactory().openSession();

		Empleados empleado = null;
		
		try {
			empleado = session.get(Empleados.class,  jefe);
		} catch (HibernateException e) {

		} finally {
			session.close();
		}
		this.empleados = empleado;
		this.jefe = jefe;
	}

	@Transient
	public byte getDepNum() {
		depNum = departamentos.getDeptNo();
		return depNum;
	}

	public void setDepNum(byte depNum) {
    	Session session = EmpleadosRest.getSesFactory().openSession();

    	Departamentos departamento = null;
		
		try {
			departamento = session.get(Departamentos.class,  depNum);
		} catch (HibernateException e) {

		} finally {
			session.close();
		}
		this.departamentos = departamento;
		this.depNum = depNum;
	}

	
	
	
}
